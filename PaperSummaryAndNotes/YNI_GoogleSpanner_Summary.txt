The paper discusses Spanner, the first database system that distributes data globally and supports external consistency. Despite that the data transactions may be distributed, Spanner manages to maintain the consistency and it’s global features by using its unique API called TrueTime, which enables a global timestamp for each transaction.

For the Implementation(Structure) of Spanner,
Spanner consists of a series of zones, which then have a zone master and several spanservers. The former distributes data to the later while the later distributes data to the client. For a client to access the assigned data, they’ll resort to the location proxy to find out the assigned spanserver. 
As for the spanserver, each has a Paxos state machine storing the metadata and log for the tablets. The Paxos state machines supports replications with key-value mapping of the replicas. Each spanserver also has a lock table for concurrency control and a transaction manager for distributed transactions.A directory in Spanner is the unit of data movement and is on top of the key-value mapping of the replicas. Data is moved via directory when transferred from a Paxos group to another. On top of the directory, there’s the relational data model supports query language, general transactions.

For the TrueTime API and Concurrency Control,
This is the key enabler for Spanner’s features, which is unique timestamp. Every data center will have a series of time master machines implement this API and every machine will have a times lave daemon that implements the API. The concurrency control spans across four kinds operations supported by Spanner, Read-Write Transaction, Read-Only Transaction, and two kinds of Snapshot Read. Via Timestamp Management, Spanner use TrueTime to ensure the consistency among these operations.